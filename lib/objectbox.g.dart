// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'feature_movie/data/local/cache/actor_cache_entity.dart';
import 'feature_movie/data/local/cache/genre_cache_entity.dart';
import 'feature_movie/data/local/cache/language_cache_entity.dart';
import 'feature_movie/data/local/cache/movie_cache_entity.dart';
import 'feature_movie/data/local/entity/actor_entity.dart';
import 'feature_movie/data/local/entity/genre_entity.dart';
import 'feature_movie/data/local/entity/language_entity.dart';
import 'feature_movie/data/local/entity/movie_entity.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 8953533174493728961),
      name: 'MovieEntity',
      lastPropertyId: const obx_int.IdUid(18, 6915043797602786895),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 880331474399359634),
            name: 'objectboxId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7854943913223293983),
            name: 'id',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 2452850063893858257),
            name: 'adult',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 1256204477759867529),
            name: 'backdropPath',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 2848178064657613025),
            name: 'genreIds',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 5290450191821165691),
            name: 'originalLanguage',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 1738891511125751027),
            name: 'originalTitle',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 7080850083363424489),
            name: 'overview',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 427694166165255915),
            name: 'popularity',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 4408077459382721059),
            name: 'posterPath',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 7761037021985787505),
            name: 'releaseDate',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 6914754885691471798),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 5090560504179244539),
            name: 'video',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 5284658378506584915),
            name: 'voteAverage',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 1997551906881324294),
            name: 'voteCount',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(17, 6966797751694568981),
            name: 'cacheId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(3, 2013130152827814036),
            relationTarget: 'MovieCacheEntity'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(18, 6915043797602786895),
            name: 'runtime',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(5, 4908492806953922821),
      name: 'ActorEntity',
      lastPropertyId: const obx_int.IdUid(14, 5344230746880501573),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8135821213392364202),
            name: 'objectboxId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2067035666169098409),
            name: 'id',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 707597921703668723),
            name: 'adult',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2021269469111213622),
            name: 'gender',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 2507502407037026828),
            name: 'knownForDepartment',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 6983605999269342808),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 4034594362339887303),
            name: 'originalName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 4143075083914975162),
            name: 'popularity',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 6814314346399686464),
            name: 'profilePath',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 6813522423209047729),
            name: 'castId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 8883588647214047931),
            name: 'character',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 8090852323138658991),
            name: 'creditId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 5344230746880501573),
            name: 'cacheId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(4, 4400601439954311521),
            relationTarget: 'ActorCacheEntity')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(6, 3545977305773488395),
      name: 'GenreEntity',
      lastPropertyId: const obx_int.IdUid(4, 5712122936058004511),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5509920407226139591),
            name: 'objectboxId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2448405622685729908),
            name: 'id',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 9127209960596847388),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5712122936058004511),
            name: 'cacheId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(5, 7455725712308446242),
            relationTarget: 'GenreCacheEntity')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(7, 2543536369853732611),
      name: 'LanguageEntity',
      lastPropertyId: const obx_int.IdUid(5, 1963309655572125704),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5689115210563104468),
            name: 'objectboxId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7194846401042267644),
            name: 'iso6391',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6945246780241911498),
            name: 'englishName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2937610117101113447),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 1963309655572125704),
            name: 'cacheId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(6, 957448105648945019),
            relationTarget: 'LanguageCacheEntity')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(8, 327909000400417064),
      name: 'ActorCacheEntity',
      lastPropertyId: const obx_int.IdUid(3, 4289818800655605562),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5779093351001441967),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2213139581722270895),
            name: 'apiKey',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4289818800655605562),
            name: 'lastFetched',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[
        obx_int.ModelBacklink(
            name: 'actors', srcEntity: 'ActorEntity', srcField: 'cache')
      ]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(9, 7339926699807891725),
      name: 'GenreCacheEntity',
      lastPropertyId: const obx_int.IdUid(3, 8504745220107113055),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6252221935078337027),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 940188267778779911),
            name: 'apiKey',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8504745220107113055),
            name: 'lastFetched',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[
        obx_int.ModelBacklink(
            name: 'genres', srcEntity: 'GenreEntity', srcField: 'cache')
      ]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(10, 9216385272916889853),
      name: 'LanguageCacheEntity',
      lastPropertyId: const obx_int.IdUid(3, 9034529098467271423),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6412891626314299402),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8028179702296218566),
            name: 'apiKey',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 9034529098467271423),
            name: 'lastFetched',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[
        obx_int.ModelBacklink(
            name: 'languages', srcEntity: 'LanguageEntity', srcField: 'cache')
      ]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(11, 3360820204674871980),
      name: 'MovieCacheEntity',
      lastPropertyId: const obx_int.IdUid(3, 2879390097746878419),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3461061765942314240),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 514550262878581578),
            name: 'apiKey',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 2879390097746878419),
            name: 'lastFetched',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[
        obx_int.ModelBacklink(
            name: 'movies', srcEntity: 'MovieEntity', srcField: 'cache')
      ])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(11, 3360820204674871980),
      lastIndexId: const obx_int.IdUid(6, 957448105648945019),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [
        7089557015242737900,
        8231444535913341635,
        6340526597742088597
      ],
      retiredIndexUids: const [2600482840616550845, 6039590265956987590],
      retiredPropertyUids: const [
        3822542895364571553,
        2129842002577330185,
        4485073558053665585,
        2175002027839489587,
        9189900540449262815,
        5404698952240130880,
        2610024385904778203,
        3699600419069978277,
        2029443698658832173,
        2911414149187052428,
        6145026498268949431,
        8154316132732109361,
        5701523798568622645,
        8210394914088979980,
        1195376576045902505,
        5945013973417224861,
        6474462824780016503,
        5084274012290279448,
        6324982271814651647
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    MovieEntity: obx_int.EntityDefinition<MovieEntity>(
        model: _entities[0],
        toOneRelations: (MovieEntity object) => [object.cache],
        toManyRelations: (MovieEntity object) => {},
        getId: (MovieEntity object) => object.objectboxId,
        setId: (MovieEntity object, int id) {
          object.objectboxId = id;
        },
        objectToFB: (MovieEntity object, fb.Builder fbb) {
          final backdropPathOffset = object.backdropPath == null
              ? null
              : fbb.writeString(object.backdropPath!);
          final genreIdsOffset = fbb.writeString(object.genreIds);
          final originalLanguageOffset =
              fbb.writeString(object.originalLanguage);
          final originalTitleOffset = fbb.writeString(object.originalTitle);
          final overviewOffset = fbb.writeString(object.overview);
          final posterPathOffset = object.posterPath == null
              ? null
              : fbb.writeString(object.posterPath!);
          final releaseDateOffset = fbb.writeString(object.releaseDate);
          final titleOffset = fbb.writeString(object.title);
          fbb.startTable(19);
          fbb.addInt64(0, object.objectboxId);
          fbb.addInt64(1, object.id);
          fbb.addBool(2, object.adult);
          fbb.addOffset(3, backdropPathOffset);
          fbb.addOffset(4, genreIdsOffset);
          fbb.addOffset(5, originalLanguageOffset);
          fbb.addOffset(6, originalTitleOffset);
          fbb.addOffset(7, overviewOffset);
          fbb.addFloat64(8, object.popularity);
          fbb.addOffset(9, posterPathOffset);
          fbb.addOffset(10, releaseDateOffset);
          fbb.addOffset(11, titleOffset);
          fbb.addBool(12, object.video);
          fbb.addFloat64(13, object.voteAverage);
          fbb.addInt64(14, object.voteCount);
          fbb.addInt64(16, object.cache.targetId);
          fbb.addInt64(17, object.runtime);
          fbb.finish(fbb.endTable());
          return object.objectboxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final adultParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 8, false);
          final backdropPathParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 10);
          final genreIdsParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final originalLanguageParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 14, '');
          final originalTitleParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 16, '');
          final overviewParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 18, '');
          final popularityParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 20, 0);
          final posterPathParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 22);
          final releaseDateParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 24, '');
          final runtimeParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 38);
          final titleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 26, '');
          final videoParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 28, false);
          final voteAverageParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 30, 0);
          final voteCountParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 32, 0);
          final object = MovieEntity(
              id: idParam,
              adult: adultParam,
              backdropPath: backdropPathParam,
              genreIds: genreIdsParam,
              originalLanguage: originalLanguageParam,
              originalTitle: originalTitleParam,
              overview: overviewParam,
              popularity: popularityParam,
              posterPath: posterPathParam,
              releaseDate: releaseDateParam,
              runtime: runtimeParam,
              title: titleParam,
              video: videoParam,
              voteAverage: voteAverageParam,
              voteCount: voteCountParam)
            ..objectboxId =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          object.cache.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 36, 0);
          object.cache.attach(store);
          return object;
        }),
    ActorEntity: obx_int.EntityDefinition<ActorEntity>(
        model: _entities[1],
        toOneRelations: (ActorEntity object) => [object.cache],
        toManyRelations: (ActorEntity object) => {},
        getId: (ActorEntity object) => object.objectboxId,
        setId: (ActorEntity object, int id) {
          object.objectboxId = id;
        },
        objectToFB: (ActorEntity object, fb.Builder fbb) {
          final knownForDepartmentOffset =
              fbb.writeString(object.knownForDepartment);
          final nameOffset = fbb.writeString(object.name);
          final originalNameOffset = fbb.writeString(object.originalName);
          final profilePathOffset = object.profilePath == null
              ? null
              : fbb.writeString(object.profilePath!);
          final characterOffset = fbb.writeString(object.character);
          final creditIdOffset = fbb.writeString(object.creditId);
          fbb.startTable(15);
          fbb.addInt64(0, object.objectboxId);
          fbb.addInt64(1, object.id);
          fbb.addBool(2, object.adult);
          fbb.addInt64(3, object.gender);
          fbb.addOffset(4, knownForDepartmentOffset);
          fbb.addOffset(5, nameOffset);
          fbb.addOffset(6, originalNameOffset);
          fbb.addFloat64(7, object.popularity);
          fbb.addOffset(8, profilePathOffset);
          fbb.addInt64(9, object.castId);
          fbb.addOffset(10, characterOffset);
          fbb.addOffset(11, creditIdOffset);
          fbb.addInt64(13, object.cache.targetId);
          fbb.finish(fbb.endTable());
          return object.objectboxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final adultParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 8, false);
          final genderParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final knownForDepartmentParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 12, '');
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 14, '');
          final originalNameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 16, '');
          final popularityParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 18, 0);
          final profilePathParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 20);
          final castIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
          final characterParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 24, '');
          final creditIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 26, '');
          final object = ActorEntity(
              id: idParam,
              adult: adultParam,
              gender: genderParam,
              knownForDepartment: knownForDepartmentParam,
              name: nameParam,
              originalName: originalNameParam,
              popularity: popularityParam,
              profilePath: profilePathParam,
              castId: castIdParam,
              character: characterParam,
              creditId: creditIdParam)
            ..objectboxId =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          object.cache.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 30, 0);
          object.cache.attach(store);
          return object;
        }),
    GenreEntity: obx_int.EntityDefinition<GenreEntity>(
        model: _entities[2],
        toOneRelations: (GenreEntity object) => [object.cache],
        toManyRelations: (GenreEntity object) => {},
        getId: (GenreEntity object) => object.objectboxId,
        setId: (GenreEntity object, int id) {
          object.objectboxId = id;
        },
        objectToFB: (GenreEntity object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(5);
          fbb.addInt64(0, object.objectboxId);
          fbb.addInt64(1, object.id);
          fbb.addOffset(2, nameOffset);
          fbb.addInt64(3, object.cache.targetId);
          fbb.finish(fbb.endTable());
          return object.objectboxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final object = GenreEntity(id: idParam, name: nameParam)
            ..objectboxId =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          object.cache.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          object.cache.attach(store);
          return object;
        }),
    LanguageEntity: obx_int.EntityDefinition<LanguageEntity>(
        model: _entities[3],
        toOneRelations: (LanguageEntity object) => [object.cache],
        toManyRelations: (LanguageEntity object) => {},
        getId: (LanguageEntity object) => object.objectboxId,
        setId: (LanguageEntity object, int id) {
          object.objectboxId = id;
        },
        objectToFB: (LanguageEntity object, fb.Builder fbb) {
          final iso6391Offset = fbb.writeString(object.iso6391);
          final englishNameOffset = fbb.writeString(object.englishName);
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(6);
          fbb.addInt64(0, object.objectboxId);
          fbb.addOffset(1, iso6391Offset);
          fbb.addOffset(2, englishNameOffset);
          fbb.addOffset(3, nameOffset);
          fbb.addInt64(4, object.cache.targetId);
          fbb.finish(fbb.endTable());
          return object.objectboxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final iso6391Param = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final englishNameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final object = LanguageEntity(
              iso6391: iso6391Param,
              englishName: englishNameParam,
              name: nameParam)
            ..objectboxId =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          object.cache.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          object.cache.attach(store);
          return object;
        }),
    ActorCacheEntity: obx_int.EntityDefinition<ActorCacheEntity>(
        model: _entities[4],
        toOneRelations: (ActorCacheEntity object) => [],
        toManyRelations: (ActorCacheEntity object) => {
              obx_int.RelInfo<ActorEntity>.toOneBacklink(14, object.id,
                  (ActorEntity srcObject) => srcObject.cache): object.actors
            },
        getId: (ActorCacheEntity object) => object.id,
        setId: (ActorCacheEntity object, int id) {
          object.id = id;
        },
        objectToFB: (ActorCacheEntity object, fb.Builder fbb) {
          final apiKeyOffset = fbb.writeString(object.apiKey);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, apiKeyOffset);
          fbb.addInt64(2, object.lastFetched);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final apiKeyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final lastFetchedParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final object = ActorCacheEntity(
              id: idParam, apiKey: apiKeyParam, lastFetched: lastFetchedParam);
          obx_int.InternalToManyAccess.setRelInfo<ActorCacheEntity>(
              object.actors,
              store,
              obx_int.RelInfo<ActorEntity>.toOneBacklink(
                  14, object.id, (ActorEntity srcObject) => srcObject.cache));
          return object;
        }),
    GenreCacheEntity: obx_int.EntityDefinition<GenreCacheEntity>(
        model: _entities[5],
        toOneRelations: (GenreCacheEntity object) => [],
        toManyRelations: (GenreCacheEntity object) => {
              obx_int.RelInfo<GenreEntity>.toOneBacklink(
                      4, object.id, (GenreEntity srcObject) => srcObject.cache):
                  object.genres
            },
        getId: (GenreCacheEntity object) => object.id,
        setId: (GenreCacheEntity object, int id) {
          object.id = id;
        },
        objectToFB: (GenreCacheEntity object, fb.Builder fbb) {
          final apiKeyOffset = fbb.writeString(object.apiKey);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, apiKeyOffset);
          fbb.addInt64(2, object.lastFetched);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final apiKeyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final lastFetchedParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final object = GenreCacheEntity(
              id: idParam, apiKey: apiKeyParam, lastFetched: lastFetchedParam);
          obx_int.InternalToManyAccess.setRelInfo<GenreCacheEntity>(
              object.genres,
              store,
              obx_int.RelInfo<GenreEntity>.toOneBacklink(
                  4, object.id, (GenreEntity srcObject) => srcObject.cache));
          return object;
        }),
    LanguageCacheEntity: obx_int.EntityDefinition<LanguageCacheEntity>(
        model: _entities[6],
        toOneRelations: (LanguageCacheEntity object) => [],
        toManyRelations: (LanguageCacheEntity object) => {
              obx_int.RelInfo<LanguageEntity>.toOneBacklink(5, object.id,
                      (LanguageEntity srcObject) => srcObject.cache):
                  object.languages
            },
        getId: (LanguageCacheEntity object) => object.id,
        setId: (LanguageCacheEntity object, int id) {
          object.id = id;
        },
        objectToFB: (LanguageCacheEntity object, fb.Builder fbb) {
          final apiKeyOffset = fbb.writeString(object.apiKey);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, apiKeyOffset);
          fbb.addInt64(2, object.lastFetched);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final apiKeyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final lastFetchedParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final object = LanguageCacheEntity(
              id: idParam, apiKey: apiKeyParam, lastFetched: lastFetchedParam);
          obx_int.InternalToManyAccess.setRelInfo<LanguageCacheEntity>(
              object.languages,
              store,
              obx_int.RelInfo<LanguageEntity>.toOneBacklink(
                  5, object.id, (LanguageEntity srcObject) => srcObject.cache));
          return object;
        }),
    MovieCacheEntity: obx_int.EntityDefinition<MovieCacheEntity>(
        model: _entities[7],
        toOneRelations: (MovieCacheEntity object) => [],
        toManyRelations: (MovieCacheEntity object) => {
              obx_int.RelInfo<MovieEntity>.toOneBacklink(17, object.id,
                  (MovieEntity srcObject) => srcObject.cache): object.movies
            },
        getId: (MovieCacheEntity object) => object.id,
        setId: (MovieCacheEntity object, int id) {
          object.id = id;
        },
        objectToFB: (MovieCacheEntity object, fb.Builder fbb) {
          final apiKeyOffset = fbb.writeString(object.apiKey);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, apiKeyOffset);
          fbb.addInt64(2, object.lastFetched);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final apiKeyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final lastFetchedParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final object = MovieCacheEntity(
              id: idParam, apiKey: apiKeyParam, lastFetched: lastFetchedParam);
          obx_int.InternalToManyAccess.setRelInfo<MovieCacheEntity>(
              object.movies,
              store,
              obx_int.RelInfo<MovieEntity>.toOneBacklink(
                  17, object.id, (MovieEntity srcObject) => srcObject.cache));
          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [MovieEntity] entity fields to define ObjectBox queries.
class MovieEntity_ {
  /// See [MovieEntity.objectboxId].
  static final objectboxId =
      obx.QueryIntegerProperty<MovieEntity>(_entities[0].properties[0]);

  /// See [MovieEntity.id].
  static final id =
      obx.QueryIntegerProperty<MovieEntity>(_entities[0].properties[1]);

  /// See [MovieEntity.adult].
  static final adult =
      obx.QueryBooleanProperty<MovieEntity>(_entities[0].properties[2]);

  /// See [MovieEntity.backdropPath].
  static final backdropPath =
      obx.QueryStringProperty<MovieEntity>(_entities[0].properties[3]);

  /// See [MovieEntity.genreIds].
  static final genreIds =
      obx.QueryStringProperty<MovieEntity>(_entities[0].properties[4]);

  /// See [MovieEntity.originalLanguage].
  static final originalLanguage =
      obx.QueryStringProperty<MovieEntity>(_entities[0].properties[5]);

  /// See [MovieEntity.originalTitle].
  static final originalTitle =
      obx.QueryStringProperty<MovieEntity>(_entities[0].properties[6]);

  /// See [MovieEntity.overview].
  static final overview =
      obx.QueryStringProperty<MovieEntity>(_entities[0].properties[7]);

  /// See [MovieEntity.popularity].
  static final popularity =
      obx.QueryDoubleProperty<MovieEntity>(_entities[0].properties[8]);

  /// See [MovieEntity.posterPath].
  static final posterPath =
      obx.QueryStringProperty<MovieEntity>(_entities[0].properties[9]);

  /// See [MovieEntity.releaseDate].
  static final releaseDate =
      obx.QueryStringProperty<MovieEntity>(_entities[0].properties[10]);

  /// See [MovieEntity.title].
  static final title =
      obx.QueryStringProperty<MovieEntity>(_entities[0].properties[11]);

  /// See [MovieEntity.video].
  static final video =
      obx.QueryBooleanProperty<MovieEntity>(_entities[0].properties[12]);

  /// See [MovieEntity.voteAverage].
  static final voteAverage =
      obx.QueryDoubleProperty<MovieEntity>(_entities[0].properties[13]);

  /// See [MovieEntity.voteCount].
  static final voteCount =
      obx.QueryIntegerProperty<MovieEntity>(_entities[0].properties[14]);

  /// See [MovieEntity.cache].
  static final cache = obx.QueryRelationToOne<MovieEntity, MovieCacheEntity>(
      _entities[0].properties[15]);

  /// See [MovieEntity.runtime].
  static final runtime =
      obx.QueryIntegerProperty<MovieEntity>(_entities[0].properties[16]);
}

/// [ActorEntity] entity fields to define ObjectBox queries.
class ActorEntity_ {
  /// See [ActorEntity.objectboxId].
  static final objectboxId =
      obx.QueryIntegerProperty<ActorEntity>(_entities[1].properties[0]);

  /// See [ActorEntity.id].
  static final id =
      obx.QueryIntegerProperty<ActorEntity>(_entities[1].properties[1]);

  /// See [ActorEntity.adult].
  static final adult =
      obx.QueryBooleanProperty<ActorEntity>(_entities[1].properties[2]);

  /// See [ActorEntity.gender].
  static final gender =
      obx.QueryIntegerProperty<ActorEntity>(_entities[1].properties[3]);

  /// See [ActorEntity.knownForDepartment].
  static final knownForDepartment =
      obx.QueryStringProperty<ActorEntity>(_entities[1].properties[4]);

  /// See [ActorEntity.name].
  static final name =
      obx.QueryStringProperty<ActorEntity>(_entities[1].properties[5]);

  /// See [ActorEntity.originalName].
  static final originalName =
      obx.QueryStringProperty<ActorEntity>(_entities[1].properties[6]);

  /// See [ActorEntity.popularity].
  static final popularity =
      obx.QueryDoubleProperty<ActorEntity>(_entities[1].properties[7]);

  /// See [ActorEntity.profilePath].
  static final profilePath =
      obx.QueryStringProperty<ActorEntity>(_entities[1].properties[8]);

  /// See [ActorEntity.castId].
  static final castId =
      obx.QueryIntegerProperty<ActorEntity>(_entities[1].properties[9]);

  /// See [ActorEntity.character].
  static final character =
      obx.QueryStringProperty<ActorEntity>(_entities[1].properties[10]);

  /// See [ActorEntity.creditId].
  static final creditId =
      obx.QueryStringProperty<ActorEntity>(_entities[1].properties[11]);

  /// See [ActorEntity.cache].
  static final cache = obx.QueryRelationToOne<ActorEntity, ActorCacheEntity>(
      _entities[1].properties[12]);
}

/// [GenreEntity] entity fields to define ObjectBox queries.
class GenreEntity_ {
  /// See [GenreEntity.objectboxId].
  static final objectboxId =
      obx.QueryIntegerProperty<GenreEntity>(_entities[2].properties[0]);

  /// See [GenreEntity.id].
  static final id =
      obx.QueryIntegerProperty<GenreEntity>(_entities[2].properties[1]);

  /// See [GenreEntity.name].
  static final name =
      obx.QueryStringProperty<GenreEntity>(_entities[2].properties[2]);

  /// See [GenreEntity.cache].
  static final cache = obx.QueryRelationToOne<GenreEntity, GenreCacheEntity>(
      _entities[2].properties[3]);
}

/// [LanguageEntity] entity fields to define ObjectBox queries.
class LanguageEntity_ {
  /// See [LanguageEntity.objectboxId].
  static final objectboxId =
      obx.QueryIntegerProperty<LanguageEntity>(_entities[3].properties[0]);

  /// See [LanguageEntity.iso6391].
  static final iso6391 =
      obx.QueryStringProperty<LanguageEntity>(_entities[3].properties[1]);

  /// See [LanguageEntity.englishName].
  static final englishName =
      obx.QueryStringProperty<LanguageEntity>(_entities[3].properties[2]);

  /// See [LanguageEntity.name].
  static final name =
      obx.QueryStringProperty<LanguageEntity>(_entities[3].properties[3]);

  /// See [LanguageEntity.cache].
  static final cache =
      obx.QueryRelationToOne<LanguageEntity, LanguageCacheEntity>(
          _entities[3].properties[4]);
}

/// [ActorCacheEntity] entity fields to define ObjectBox queries.
class ActorCacheEntity_ {
  /// See [ActorCacheEntity.id].
  static final id =
      obx.QueryIntegerProperty<ActorCacheEntity>(_entities[4].properties[0]);

  /// See [ActorCacheEntity.apiKey].
  static final apiKey =
      obx.QueryStringProperty<ActorCacheEntity>(_entities[4].properties[1]);

  /// See [ActorCacheEntity.lastFetched].
  static final lastFetched =
      obx.QueryIntegerProperty<ActorCacheEntity>(_entities[4].properties[2]);

  /// see [ActorCacheEntity.actors]
  static final actors = obx.QueryBacklinkToMany<ActorEntity, ActorCacheEntity>(
      ActorEntity_.cache);
}

/// [GenreCacheEntity] entity fields to define ObjectBox queries.
class GenreCacheEntity_ {
  /// See [GenreCacheEntity.id].
  static final id =
      obx.QueryIntegerProperty<GenreCacheEntity>(_entities[5].properties[0]);

  /// See [GenreCacheEntity.apiKey].
  static final apiKey =
      obx.QueryStringProperty<GenreCacheEntity>(_entities[5].properties[1]);

  /// See [GenreCacheEntity.lastFetched].
  static final lastFetched =
      obx.QueryIntegerProperty<GenreCacheEntity>(_entities[5].properties[2]);

  /// see [GenreCacheEntity.genres]
  static final genres = obx.QueryBacklinkToMany<GenreEntity, GenreCacheEntity>(
      GenreEntity_.cache);
}

/// [LanguageCacheEntity] entity fields to define ObjectBox queries.
class LanguageCacheEntity_ {
  /// See [LanguageCacheEntity.id].
  static final id =
      obx.QueryIntegerProperty<LanguageCacheEntity>(_entities[6].properties[0]);

  /// See [LanguageCacheEntity.apiKey].
  static final apiKey =
      obx.QueryStringProperty<LanguageCacheEntity>(_entities[6].properties[1]);

  /// See [LanguageCacheEntity.lastFetched].
  static final lastFetched =
      obx.QueryIntegerProperty<LanguageCacheEntity>(_entities[6].properties[2]);

  /// see [LanguageCacheEntity.languages]
  static final languages =
      obx.QueryBacklinkToMany<LanguageEntity, LanguageCacheEntity>(
          LanguageEntity_.cache);
}

/// [MovieCacheEntity] entity fields to define ObjectBox queries.
class MovieCacheEntity_ {
  /// See [MovieCacheEntity.id].
  static final id =
      obx.QueryIntegerProperty<MovieCacheEntity>(_entities[7].properties[0]);

  /// See [MovieCacheEntity.apiKey].
  static final apiKey =
      obx.QueryStringProperty<MovieCacheEntity>(_entities[7].properties[1]);

  /// See [MovieCacheEntity.lastFetched].
  static final lastFetched =
      obx.QueryIntegerProperty<MovieCacheEntity>(_entities[7].properties[2]);

  /// see [MovieCacheEntity.movies]
  static final movies = obx.QueryBacklinkToMany<MovieEntity, MovieCacheEntity>(
      MovieEntity_.cache);
}
